// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid()) @db.Uuid
  email    String   @unique
  password String
  name     String
  role     UserRole @default(CLIENT)
  cartId   String?  @db.Uuid

  orders Order[] // Relacionamento com as compras feitas pelo usu√°rio
}

enum UserRole {
  CLIENT
  ADMIN
}

model Product {
  id          String  @id @default(uuid()) @db.Uuid
  name        String
  brand       String
  description String
  price       Decimal
  stock       Int
  orderId     String? @db.Uuid

  Order     Order?      @relation(fields: [orderId], references: [id])
  OrderItem OrderItem[]
}

model OrderItem {
  id        String @id @default(uuid()) @db.Uuid
  productId String @db.Uuid
  orderId   String
  quantity  Int

  order   Order[]
  product Product @relation(fields: [productId], references: [id])
}

model Order {
  id          String  @id @default(uuid()) @db.Uuid
  userId      String  @db.Uuid
  total       Decimal
  orderItemId String? @db.Uuid

  status    OrderStatus
  products  Product[] // Lista de produtos no pedido
  User      User        @relation(fields: [userId], references: [id])
  OrderItem OrderItem?  @relation(fields: [orderItemId], references: [id])
}

enum OrderStatus {
  PENDING
  PAID
  SHIPPED
  COMPLETED
  CANCELED
}
